services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"

  minio:
    image: minio/minio:RELEASE.2025-07-23T15-54-02Z
    command: server /data --console-address ":${MINIO_CONSOLE_PORT}"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    ports:
      - "${MINIO_API_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"

  createbuckets:
    image: minio/mc:RELEASE.2024-07-31T15-58-33Z-cpuv1
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
        mc alias set local http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} &&
        mc mb -p local/${MLFLOW_ARTIFACT_BUCKET} || true &&
        echo 'Buckets ready';
      "

  mlflow:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - createbuckets
    environment:
      AWS_ACCESS_KEY_ID: ${MINIO_ROOT_USER}
      AWS_SECRET_ACCESS_KEY: ${MINIO_ROOT_PASSWORD}
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
    command: >
      mlflow server
      --backend-store-uri postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      --default-artifact-root s3://${MLFLOW_ARTIFACT_BUCKET}
      --host 0.0.0.0
      --port 5000
    ports:
      - "${MLFLOW_PORT}:5000"

  trainer:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - mlflow
    environment:
      MLFLOW_TRACKING_URI: http://mlflow:${MLFLOW_PORT}
      AWS_ACCESS_KEY_ID: ${MINIO_ROOT_USER}
      AWS_SECRET_ACCESS_KEY: ${MINIO_ROOT_PASSWORD}
      MLFLOW_S3_ENDPOINT_URL: http://minio:${MINIO_API_PORT}
      PYTHONPATH: /work 
    working_dir: /work
    volumes:
      - ./:/work
    command: tail -f /dev/null

volumes:
  pgdata:
  minio_data:
